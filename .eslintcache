[{"/home/novvea/GitHub/aterwinwin/client/src/index.tsx":"1","/home/novvea/GitHub/aterwinwin/client/src/reportWebVitals.ts":"2","/home/novvea/GitHub/aterwinwin/client/src/App.tsx":"3","/home/novvea/GitHub/aterwinwin/client/src/routes/Routes.tsx":"4","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/UserProvider.tsx":"5","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/CardProvider.tsx":"6","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/Navigation.tsx":"7","/home/novvea/GitHub/aterwinwin/client/src/routes/RoutingPath.ts":"8","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/desktopnavigation/DesktopNavigation.tsx":"9","/home/novvea/GitHub/aterwinwin/client/src/hooks/useWindowDimensions.tsx":"10","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/MobileNavigation.tsx":"11","/home/novvea/GitHub/aterwinwin/client/src/view/signup/SignUpView.tsx":"12","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/settingsview/SettingsView.tsx":"13","/home/novvea/GitHub/aterwinwin/client/src/view/home/HomeView.tsx":"14","/home/novvea/GitHub/aterwinwin/client/src/view/about/AboutView.tsx":"15","/home/novvea/GitHub/aterwinwin/client/src/view/categories/CategoriesView.tsx":"16","/home/novvea/GitHub/aterwinwin/client/src/view/login/LogInView.tsx":"17","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/myprofileview/MyProfileView.tsx":"18","/home/novvea/GitHub/aterwinwin/client/src/components/profile/Profile.tsx":"19","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx":"20","/home/novvea/GitHub/aterwinwin/client/src/components/search/Search.tsx":"21","/home/novvea/GitHub/aterwinwin/client/src/components/productcards/ProductCards.tsx":"22","/home/novvea/GitHub/aterwinwin/client/src/components/backdrop/BackDrop.tsx":"23","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx":"24","/home/novvea/GitHub/aterwinwin/client/src/components/profile/profiledropdown/ProfileDropDown.tsx":"25","/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/BackendAPIService.ts":"26","/home/novvea/GitHub/aterwinwin/client/src/shared/api/BackendAPI.ts":"27","/home/novvea/GitHub/aterwinwin/client/src/view/additem/AddItemView.tsx":"28","/home/novvea/GitHub/aterwinwin/client/src/components/additembutton/AddItemButton.tsx":"29"},{"size":478,"mtime":1614785500243,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1614785500248,"results":"32","hashOfConfig":"31"},{"size":468,"mtime":1614785500199,"results":"33","hashOfConfig":"31"},{"size":2129,"mtime":1615464329138,"results":"34","hashOfConfig":"31"},{"size":417,"mtime":1615464329141,"results":"35","hashOfConfig":"31"},{"size":518,"mtime":1614785500269,"results":"36","hashOfConfig":"31"},{"size":772,"mtime":1614785500207,"results":"37","hashOfConfig":"31"},{"size":470,"mtime":1615450605065,"results":"38","hashOfConfig":"31"},{"size":1005,"mtime":1615464329129,"results":"39","hashOfConfig":"31"},{"size":551,"mtime":1614785500241,"results":"40","hashOfConfig":"31"},{"size":958,"mtime":1615464329132,"results":"41","hashOfConfig":"31"},{"size":1665,"mtime":1615402016909,"results":"42","hashOfConfig":"31"},{"size":153,"mtime":1614785500283,"results":"43","hashOfConfig":"31"},{"size":1512,"mtime":1615451686895,"results":"44","hashOfConfig":"31"},{"size":150,"mtime":1614785500274,"results":"45","hashOfConfig":"31"},{"size":387,"mtime":1614785500287,"results":"46","hashOfConfig":"31"},{"size":2001,"mtime":1615464470834,"results":"47","hashOfConfig":"31"},{"size":1035,"mtime":1615464329144,"results":"48","hashOfConfig":"31"},{"size":597,"mtime":1614785500232,"results":"49","hashOfConfig":"31"},{"size":699,"mtime":1614785500223,"results":"50","hashOfConfig":"31"},{"size":210,"mtime":1614785500239,"results":"51","hashOfConfig":"31"},{"size":2628,"mtime":1615454668240,"results":"52","hashOfConfig":"31"},{"size":200,"mtime":1614785500204,"results":"53","hashOfConfig":"31"},{"size":403,"mtime":1614785500218,"results":"54","hashOfConfig":"31"},{"size":793,"mtime":1615464329135,"results":"55","hashOfConfig":"31"},{"size":283,"mtime":1615384258669,"results":"56","hashOfConfig":"31"},{"size":236,"mtime":1615298193541,"results":"57","hashOfConfig":"31"},{"size":181,"mtime":1615452399086,"results":"58","hashOfConfig":"31"},{"size":578,"mtime":1615459750500,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1a3dezs",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/novvea/GitHub/aterwinwin/client/src/index.tsx",[],["130","131"],"/home/novvea/GitHub/aterwinwin/client/src/reportWebVitals.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/App.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/routes/Routes.tsx",["132"],"import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { AboutView } from \"../view/about/AboutView\";\nimport { HomeView } from \"../view/home/HomeView\";\nimport { CategoriesView } from \"../view/categories/CategoriesView\";\nimport { LogInView } from \"../view/login/LogInView\";\nimport { SignUpView } from \"../view/signup/SignUpView\";\nimport { SettingsView } from '../view/authenticateduserviews/settingsview/SettingsView'\nimport { MyProfileView } from '../view/authenticateduserviews/myprofileview/MyProfileView'\nimport { AddItemView } from '../view/additem/AddItemView'\nimport RoutingPath from \"./RoutingPath\";\nimport { UserContext } from \"../shared/provider/UserProvider\";\nimport { useEffect, useContext } from \"react\";\n\nexport const Routes = (props: { children: React.ReactChild }) => {\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n  const { children } = props;\n\n  const changeRoute = (goToView: React.FC, blockView: React.FC) => {\n    return !authUserContext ? goToView : blockView\n  }\n  useEffect(() => {\n    if (localStorage.getItem(\"user\")) {\n      setAuthUserContext({ username: localStorage.getItem(\"user\") });\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {children}\n      <Switch>\n        <Route exact path={RoutingPath.homeView} component={HomeView} />\n        <Route exact path={RoutingPath.aboutView} component={AboutView} />\n        <Route exact path={RoutingPath.categoriesView} component={CategoriesView} />\n        <Route exact path={RoutingPath.logInView} component={changeRoute(LogInView, HomeView)} />\n        <Route exact path={RoutingPath.signUpView} component={SignUpView} />\n        <Route exact path={RoutingPath.settingsView} component={changeRoute(SignUpView, SettingsView)} />\n        <Route exact path={RoutingPath.myProfileView} component={changeRoute(SignUpView, MyProfileView)} />\n        <Route exact path={RoutingPath.addItemView} component={AddItemView} />\n        <Route component={HomeView} />{\" \"}\n        {/* Om vi vill att homeView är den första sidan vi kommer till och om något blir fel */}\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/UserProvider.tsx",["133"],"import { useState, createContext, ReactChild } from \"react\";\nimport { i_loginCredentials } from '../interface/Interface'\n\nexport const UserContext = createContext<any>(null);\n\nexport const UserProvider = (props: { children: React.ReactChild }) => {\n  const [authUserContext, setAuthUserContext] = useState<i_loginCredentials>({\n    username: \"\",\n    password: \"\",\n    isAuthenticated: false\n  });\n\n  const { children } = props;\n\n  return (\n    <UserContext.Provider value={[authUserContext, setAuthUserContext]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/CardProvider.tsx",["134"],"import { useState, createContext, ReactChild } from 'react'\n\nexport const CardContext = createContext<any>(null)\n\nexport const CardProvider = (props: {children: React.ReactChild}) => {\n  const [indexContext, setIndexContext] = useState(0)\n  const [likedPicturesContext, setLikedPicturesContext] = useState([])\n  const { children } = props;\n\n  return (\n    <CardContext.Provider value={{indexContext, setIndexContext, likedPicturesContext, setLikedPicturesContext}} >\n      {children}\n    </CardContext.Provider>\n  )\n}\n","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/Navigation.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/routes/RoutingPath.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/desktopnavigation/DesktopNavigation.tsx",["135","136"],"import \"./DesktopNavigation.css\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport RoutingPath from \"../../../routes/RoutingPath\";\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\nimport { Profile } from \"../../profile/Profile\";\n\n\nexport const DesktopNavigation = () => {\n  const history = useHistory()\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUserContext.isAuthenticated === true ?\n      <div className=\"profile\" >\n        <Profile />\n      </div>\n      :\n      <div className=\"desktopNavigationTabWrapper\">\n        <Link to={RoutingPath.signUpView}>\n          Gå med\n      </Link>\n        <span> eller </span>\n        <Link to={RoutingPath.logInView}>\n          logga in\n      </Link>\n        <span> eller </span>\n        <Link to={RoutingPath.aboutView}>\n          få veta hur det fungerar.\n      </Link>\n      </div>\n      ;\n  };\n\n  return displayNavigationOrUsername()\n};\n","/home/novvea/GitHub/aterwinwin/client/src/hooks/useWindowDimensions.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/MobileNavigation.tsx",["137"],"import \"./MobileNavigation.css\";\nimport { useState, useContext } from 'react'\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\nimport { SideBar } from './sidebar/SideBar'\nimport { BackDrop } from '../../backdrop/BackDrop'\nimport { Profile } from '../../profile/Profile'\nimport { UserContext } from '../../../shared/provider/UserProvider'\n\n\nexport const MobileNavigation = () => {\n  const [openSideBar, setOpenSideBar] = useState<boolean>(false)\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUserContext.isAuthenticated === true ?\n      <div className=\"profile\" >\n        <Profile />\n      </div>\n      :\n      <>\n        <HamburgerButton sideBarHandler={setOpenSideBar} />\n        <SideBar sideBarIsOpen={openSideBar} sideBarHandler={setOpenSideBar} />\n        {!openSideBar || <BackDrop sideBarHandler={setOpenSideBar} />}\n      </>\n  }\n\n  return displayNavigationOrUsername()\n};\n\n\n\n","/home/novvea/GitHub/aterwinwin/client/src/view/signup/SignUpView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/settingsview/SettingsView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/home/HomeView.tsx",["138","139"],"import { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom'\nimport RoutingPath from '../../routes/RoutingPath'\nimport './HomeView.css'\nimport { ProductCards } from '../../components/productcards/ProductCards'\nimport { Search } from '../../components/search/Search'\nimport { UserContext } from '../../shared/provider/UserProvider'\nimport { AddItemButton } from '../../components/additembutton/AddItemButton'\n\nexport const HomeView = () => {\n  const [authUserContext] = useContext(UserContext);\n\n  /*   const displayUsernameIfAuthenticated = () => {\n      return authUserContext ? <h1>Välkommen till hemvyn {authUserContext.username}</h1> : <h1>Välkommen till hemvyn </h1>\n    } */\n\n  useEffect(() => {\n    ; /* det första som sker när komponenten laddas in */\n    return () => {\n      /* det sista som sker när komponeneten avlägsnas*/\n    };\n  }, []); /* när det värdet vi sätter in i input uppdateras så körs hela useEffect om */\n\n  return (\n    <div className='homeViewWrapper'>\n      {/*  {displayUsernameIfAuthenticated()} */}\n      {/*       <div className='homeViewCategoriesWrapper'>\n        <Link to={RoutingPath.categoriesView}>Kategorier</Link>\n      </div>\n      <div className='homeViewSearchWrapper'>\n        <Search />\n      </div> */}\n      <div className='homeViewProductCardsWrapper'>\n        <ProductCards />\n        <AddItemButton />\n        <Link to={RoutingPath.myProfileView}>Hitta mina gillade produkter här...</Link>\n      </div>\n    </div>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/view/about/AboutView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/categories/CategoriesView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/login/LogInView.tsx",["140"],"/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/myprofileview/MyProfileView.tsx",["141"],"import './MyProfileView.css'\nimport { useContext } from 'react'\nimport { CardContext } from '../../../shared/provider/CardProvider'\n\nexport const MyProfileView = () => {\n\n  const { likedPicturesContext, setLikedPicturesContext } = useContext<any>(CardContext)\n\n  const displayLikedPicturesIfThereAreAny = () => {\n    return likedPicturesContext.length > 0\n      ?\n      <>\n        <h2>Jag har gillat följande bilder:</h2>\n        <ul className='likedPictures'>\n          {likedPicturesContext.map((pic: string) => <li><img key={pic} src={pic} alt='Product' /></li>)}\n        </ul>\n      </>\n      :\n      <h2>Du har ännu inte gillat några bilder</h2>\n  }\n\n  return (\n    <div>\n      <h1>Detta är min profilsida</h1>\n      {displayLikedPicturesIfThereAreAny()}\n\n      <ul>\n        <li>Lägg till info om användaren</li>\n        <li>Visa upplagda föremål</li>\n        <li>Visa gillade och supergillade föremål</li>\n        <li>Visa önskelistan</li>\n      </ul>\n    </div>\n  )\n}","/home/novvea/GitHub/aterwinwin/client/src/components/profile/Profile.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/search/Search.tsx",[],["142","143"],"/home/novvea/GitHub/aterwinwin/client/src/components/productcards/ProductCards.tsx",["144","145","146"],"import styles from './ProductCards.module.css'\nimport { useState, useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport TinderCard from 'react-tinder-card'\nimport { CardContext } from '../../shared/provider/CardProvider'\n\n\nexport const ProductCards = () => {\n  const [picsumData, setPicsumData] = useState<any>()\n  const { indexContext, setIndexContext } = useContext<any>(CardContext)\n  const { likedPicturesContext, setLikedPicturesContext } = useContext<any>(CardContext)\n\n  const getDataFromPicsumAPI = async () => {\n    try {\n      const serverResponse = await axios.get('https://picsum.photos/v2/list')\n      setPicsumData(serverResponse.data[indexContext].download_url)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getDataFromPicsumAPI()\n  }, [indexContext])\n\n  const addCountOnButtonClick = () => {\n    setIndexContext(indexContext + 1)\n  }\n  /* console.log('utanför likedPicturesContext:', likedPicturesContext) */\n  const likeAndAddCountOnButtonClick = () => {\n    setIndexContext(indexContext + 1)\n    /* console.log('innanför likedPicturesContext:', likedPicturesContext) */\n    setLikedPicturesContext([...likedPicturesContext, picsumData])\n  }\n\n  return (\n    <div className={styles.productCardWrapper}>\n      <TinderCard\n        onSwipe={() => console.log('onSwipe')}\n        onCardLeftScreen={() => console.log('CardLeftScreen')}\n      >\n        <div className={styles.productCard}>\n          <img className={styles.productImage} src={picsumData} alt='A randome produkt taken from the API' />\n          <h2 className={styles.productTitle}>Vattenkanna</h2>\n          <div className={styles.productSubtitle}>5km bort • Kök</div>\n        </div>\n      </TinderCard>\n      <TinderCard\n        onSwipe={() => console.log('onSwipe')}\n        onCardLeftScreen={() => console.log('CardLeftScreen')}\n      >\n        <div className={styles.productCard}>\n          <img className={styles.productImage} src={picsumData} alt='A randome produkt taken from the API' />\n          <h2 className={styles.productTitle}>Vattenkanna</h2>\n          <div className={styles.productSubtitle}>5km bort • Kök</div>\n        </div>\n      </TinderCard>\n      {/*       <h1>Produkt av typen blabla med id {indexContext}</h1>\n      \n      <div className='decisionButtonWrapper'>\n        <button onClick={() => addCountOnButtonClick()}>Nej tack!</button>\n        <button onClick={() => likeAndAddCountOnButtonClick()}>Mer än bara gillar, vill absolut ha!!!!</button>\n        <button onClick={() => likeAndAddCountOnButtonClick()}> Gillar't </button>\n      </div> */}\n    </div>\n  )\n}\n","/home/novvea/GitHub/aterwinwin/client/src/components/backdrop/BackDrop.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/profile/profiledropdown/ProfileDropDown.tsx",[],["147","148"],"/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/BackendAPIService.ts",["149"],"import http from '../BackendAPI'\nimport { i_createNewUser } from '../../interface/Interface'\n\nconst createUser = (data: i_createNewUser) => {\n  return http.post('/user', data)\n}\n\nconst getAllUsers = () => {\n  return http.get('/user')\n}\n\nexport default {\n  createUser,\n  getAllUsers\n}","/home/novvea/GitHub/aterwinwin/client/src/shared/api/BackendAPI.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/view/additem/AddItemView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/additembutton/AddItemButton.tsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":25,"column":6,"nodeType":"156","endLine":25,"endColumn":8,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":1,"column":35,"nodeType":"160","messageId":"161","endLine":1,"endColumn":45},{"ruleId":"158","severity":1,"message":"159","line":1,"column":35,"nodeType":"160","messageId":"161","endLine":1,"endColumn":45},{"ruleId":"158","severity":1,"message":"162","line":10,"column":9,"nodeType":"160","messageId":"161","endLine":10,"endColumn":16},{"ruleId":"158","severity":1,"message":"163","line":11,"column":27,"nodeType":"160","messageId":"161","endLine":11,"endColumn":45},{"ruleId":"158","severity":1,"message":"163","line":12,"column":27,"nodeType":"160","messageId":"161","endLine":12,"endColumn":45},{"ruleId":"158","severity":1,"message":"164","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":16},{"ruleId":"158","severity":1,"message":"165","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":20,"column":9,"nodeType":"168","messageId":"169","endLine":20,"endColumn":48},{"ruleId":"158","severity":1,"message":"170","line":7,"column":33,"nodeType":"160","messageId":"161","endLine":7,"endColumn":56},{"ruleId":"150","replacedBy":"171"},{"ruleId":"152","replacedBy":"172"},{"ruleId":"154","severity":1,"message":"173","line":24,"column":6,"nodeType":"156","endLine":24,"endColumn":20,"suggestions":"174"},{"ruleId":"158","severity":1,"message":"175","line":26,"column":9,"nodeType":"160","messageId":"161","endLine":26,"endColumn":30},{"ruleId":"158","severity":1,"message":"176","line":30,"column":9,"nodeType":"160","messageId":"161","endLine":30,"endColumn":37},{"ruleId":"150","replacedBy":"177"},{"ruleId":"152","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":12,"column":1,"nodeType":"181","endLine":15,"endColumn":2},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthUserContext'. Either include it or remove the dependency array.","ArrayExpression",["184"],"@typescript-eslint/no-unused-vars","'ReactChild' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'setAuthUserContext' is assigned a value but never used.","'Search' is defined but never used.","'authUserContext' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'setLikedPicturesContext' is assigned a value but never used.",["182"],["183"],"React Hook useEffect has a missing dependency: 'getDataFromPicsumAPI'. Either include it or remove the dependency array.",["185"],"'addCountOnButtonClick' is assigned a value but never used.","'likeAndAddCountOnButtonClick' is assigned a value but never used.",["182"],["183"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [setAuthUserContext]",{"range":"190","text":"191"},"Update the dependencies array to be: [getDataFromPicsumAPI, indexContext]",{"range":"192","text":"193"},[1170,1172],"[setAuthUserContext]",[803,817],"[getDataFromPicsumAPI, indexContext]"]