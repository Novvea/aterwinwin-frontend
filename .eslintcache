[{"/home/novvea/GitHub/aterwinwin/client/src/index.tsx":"1","/home/novvea/GitHub/aterwinwin/client/src/reportWebVitals.ts":"2","/home/novvea/GitHub/aterwinwin/client/src/App.tsx":"3","/home/novvea/GitHub/aterwinwin/client/src/routes/Routes.tsx":"4","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/UserProvider.tsx":"5","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/CardProvider.tsx":"6","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/Navigation.tsx":"7","/home/novvea/GitHub/aterwinwin/client/src/routes/RoutingPath.ts":"8","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/desktopnavigation/DesktopNavigation.tsx":"9","/home/novvea/GitHub/aterwinwin/client/src/hooks/useWindowDimensions.tsx":"10","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/MobileNavigation.tsx":"11","/home/novvea/GitHub/aterwinwin/client/src/view/signup/SignUpView.tsx":"12","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/settingsview/SettingsView.tsx":"13","/home/novvea/GitHub/aterwinwin/client/src/view/home/HomeView.tsx":"14","/home/novvea/GitHub/aterwinwin/client/src/view/about/AboutView.tsx":"15","/home/novvea/GitHub/aterwinwin/client/src/view/categories/CategoriesView.tsx":"16","/home/novvea/GitHub/aterwinwin/client/src/view/login/LogInView.tsx":"17","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/myprofileview/MyProfileView.tsx":"18","/home/novvea/GitHub/aterwinwin/client/src/components/profile/Profile.tsx":"19","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx":"20","/home/novvea/GitHub/aterwinwin/client/src/components/search/Search.tsx":"21","/home/novvea/GitHub/aterwinwin/client/src/components/backdrop/BackDrop.tsx":"22","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx":"23","/home/novvea/GitHub/aterwinwin/client/src/components/profile/profiledropdown/ProfileDropDown.tsx":"24","/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/BackendAPIService.ts":"25","/home/novvea/GitHub/aterwinwin/client/src/shared/api/BackendAPI.ts":"26","/home/novvea/GitHub/aterwinwin/client/src/view/additem/AddItemView.tsx":"27","/home/novvea/GitHub/aterwinwin/client/src/components/additembutton/AddItemButton.tsx":"28","/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/CloudinaryAPIService.ts":"29","/home/novvea/GitHub/aterwinwin/client/src/shared/api/CloudinaryAPI.ts":"30","/home/novvea/GitHub/aterwinwin/client/src/components/itemcards/ItemCards.tsx":"31"},{"size":478,"mtime":1614785500243,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":1614785500248,"results":"34","hashOfConfig":"33"},{"size":468,"mtime":1614785500199,"results":"35","hashOfConfig":"33"},{"size":1972,"mtime":1615822131752,"results":"36","hashOfConfig":"33"},{"size":478,"mtime":1615470769204,"results":"37","hashOfConfig":"33"},{"size":518,"mtime":1614785500269,"results":"38","hashOfConfig":"33"},{"size":802,"mtime":1615899618387,"results":"39","hashOfConfig":"33"},{"size":470,"mtime":1615450605065,"results":"40","hashOfConfig":"33"},{"size":1015,"mtime":1615925635711,"results":"41","hashOfConfig":"33"},{"size":551,"mtime":1614785500241,"results":"42","hashOfConfig":"33"},{"size":967,"mtime":1615470665126,"results":"43","hashOfConfig":"33"},{"size":3343,"mtime":1615891971856,"results":"44","hashOfConfig":"33"},{"size":153,"mtime":1614785500283,"results":"45","hashOfConfig":"33"},{"size":1284,"mtime":1615750133265,"results":"46","hashOfConfig":"33"},{"size":170,"mtime":1615750518218,"results":"47","hashOfConfig":"33"},{"size":387,"mtime":1614785500287,"results":"48","hashOfConfig":"33"},{"size":3080,"mtime":1615892162032,"results":"49","hashOfConfig":"33"},{"size":2147,"mtime":1615996084703,"results":"50","hashOfConfig":"33"},{"size":598,"mtime":1615804493558,"results":"51","hashOfConfig":"33"},{"size":699,"mtime":1614785500223,"results":"52","hashOfConfig":"33"},{"size":210,"mtime":1614785500239,"results":"53","hashOfConfig":"33"},{"size":200,"mtime":1614785500204,"results":"54","hashOfConfig":"33"},{"size":403,"mtime":1614785500218,"results":"55","hashOfConfig":"33"},{"size":782,"mtime":1615822198555,"results":"56","hashOfConfig":"33"},{"size":847,"mtime":1615924432240,"results":"57","hashOfConfig":"33"},{"size":236,"mtime":1615298193541,"results":"58","hashOfConfig":"33"},{"size":2766,"mtime":1615893313529,"results":"59","hashOfConfig":"33"},{"size":1247,"mtime":1615892386140,"results":"60","hashOfConfig":"33"},{"size":291,"mtime":1615714237576,"results":"61","hashOfConfig":"33"},{"size":207,"mtime":1615714254439,"results":"62","hashOfConfig":"33"},{"size":2813,"mtime":1615925308656,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1a3dezs",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/novvea/GitHub/aterwinwin/client/src/index.tsx",[],["140","141"],"/home/novvea/GitHub/aterwinwin/client/src/reportWebVitals.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/App.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/routes/Routes.tsx",["142"],"import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { AboutView } from \"../view/about/AboutView\";\nimport { HomeView } from \"../view/home/HomeView\";\nimport { CategoriesView } from \"../view/categories/CategoriesView\";\nimport { LogInView } from \"../view/login/LogInView\";\nimport { SignUpView } from \"../view/signup/SignUpView\";\nimport { SettingsView } from '../view/authenticateduserviews/settingsview/SettingsView'\nimport { MyProfileView } from '../view/authenticateduserviews/myprofileview/MyProfileView'\nimport { AddItemView } from '../view/additem/AddItemView'\nimport RoutingPath from \"./RoutingPath\";\nimport { UserContext } from \"../shared/provider/UserProvider\";\nimport { useContext } from \"react\";\n\nexport const Routes = (props: { children: React.ReactChild }) => {\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n  const { children } = props;\n\n  const changeRoute = (goToView: React.FC, blockView: React.FC) => {\n    return !authUserContext ? goToView : blockView\n  }\n\n  return (\n    <BrowserRouter>\n      {children}\n      <Switch>\n        <Route exact path={RoutingPath.homeView} component={HomeView} />\n        <Route exact path={RoutingPath.aboutView} component={AboutView} />\n        <Route exact path={RoutingPath.categoriesView} component={CategoriesView} />\n        <Route exact path={RoutingPath.logInView} component={changeRoute(LogInView, HomeView)} />\n        <Route exact path={RoutingPath.signUpView} component={SignUpView} />\n        <Route exact path={RoutingPath.settingsView} component={changeRoute(SignUpView, SettingsView)} />\n        <Route exact path={RoutingPath.myProfileView} component={changeRoute(SignUpView, MyProfileView)} />\n        <Route exact path={RoutingPath.addItemView} component={AddItemView} />\n        <Route component={HomeView} />{\" \"}\n        {/* Om vi vill att homeView är den första sidan vi kommer till och om något blir fel */}\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/UserProvider.tsx",["143","144"],"import { useState, createContext, ReactChild } from \"react\";\nimport { i_loginCredentials } from '../interface/Interface'\n\nexport const UserContext = createContext<any>(null);\n\nexport const UserProvider = (props: { children: React.ReactChild }) => {\n  const [authUserContext, setAuthUserContext] = useState();\n\n  const { children } = props;\n\n  return (\n    <UserContext.Provider value={[authUserContext, setAuthUserContext]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/CardProvider.tsx",["145"],"import { useState, createContext, ReactChild } from 'react'\n\nexport const CardContext = createContext<any>(null)\n\nexport const CardProvider = (props: {children: React.ReactChild}) => {\n  const [indexContext, setIndexContext] = useState(0)\n  const [likedPicturesContext, setLikedPicturesContext] = useState([])\n  const { children } = props;\n\n  return (\n    <CardContext.Provider value={{indexContext, setIndexContext, likedPicturesContext, setLikedPicturesContext}} >\n      {children}\n    </CardContext.Provider>\n  )\n}\n","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/Navigation.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/routes/RoutingPath.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/desktopnavigation/DesktopNavigation.tsx",["146","147"],"import \"./DesktopNavigation.css\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport RoutingPath from \"../../../routes/RoutingPath\";\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\nimport { Profile } from \"../../profile/Profile\";\n\n\nexport const DesktopNavigation = () => {\n  const history = useHistory()\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUserContext ?\n      <div className=\"profile\" >\n        <Profile />\n      </div>\n      :\n      <div className=\"desktopNavigationTabWrapper\">\n        <Link to={RoutingPath.signUpView}>\n          Gå med\n      </Link>\n        <span> eller </span>\n        <Link to={RoutingPath.logInView}>\n          logga in\n      </Link>\n        <span> eller </span>\n        <Link to={RoutingPath.aboutView}>\n          få veta hur det fungerar.\n      </Link>\n      </div>\n      ;\n  };\n\n  return displayNavigationOrUsername()\n};\n","/home/novvea/GitHub/aterwinwin/client/src/hooks/useWindowDimensions.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/MobileNavigation.tsx",["148"],"import \"./MobileNavigation.css\";\nimport { useState, useContext } from 'react'\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\nimport { SideBar } from './sidebar/SideBar'\nimport { BackDrop } from '../../backdrop/BackDrop'\nimport { Profile } from '../../profile/Profile'\nimport { UserContext } from '../../../shared/provider/UserProvider'\n\n\nexport const MobileNavigation = () => {\n  const [openSideBar, setOpenSideBar] = useState<boolean>(false)\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUserContext ?\n      <div className=\"profile\" >\n        <Profile />\n      </div>\n      :\n      <>\n        <HamburgerButton sideBarHandler={setOpenSideBar} />\n        <SideBar sideBarIsOpen={openSideBar} sideBarHandler={setOpenSideBar} />\n        {!openSideBar || <BackDrop sideBarHandler={setOpenSideBar} />}\n      </>\n  }\n\n  return displayNavigationOrUsername()\n};\n\n\n\n","/home/novvea/GitHub/aterwinwin/client/src/view/signup/SignUpView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/settingsview/SettingsView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/home/HomeView.tsx",["149","150","151","152"],"import { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom'\nimport RoutingPath from '../../routes/RoutingPath'\nimport styles from './HomeView.module.css'\nimport { ItemCards } from '../../components/itemcards/ItemCards'\nimport { Search } from '../../components/search/Search'\nimport { UserContext } from '../../shared/provider/UserProvider'\nimport { AddItemButton } from '../../components/additembutton/AddItemButton'\n\nexport const HomeView = () => {\n  const [authUserContext] = useContext(UserContext);\n\n  /*   const displayUsernameIfAuthenticated = () => {\n      return authUserContext ? <h1>Välkommen till hemvyn {authUserContext.username}</h1> : <h1>Välkommen till hemvyn </h1>\n    } */\n\n  useEffect(() => {\n    ; /* det första som sker när komponenten laddas in */\n    return () => {\n      /* det sista som sker när komponeneten avlägsnas*/\n    };\n  }, []); /* när det värdet vi sätter in i input uppdateras så körs hela useEffect om */\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.content}>\n        <div className={styles.itemCardsContainer}>\n          <ItemCards />\n        </div>\n        <div className={styles.actionsContainer}>\n          <AddItemButton />\n        </div>\n      </div>\n    </div>\n\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/view/about/AboutView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/categories/CategoriesView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/login/LogInView.tsx",["153"],"import styles from './LogInView.module.css'\nimport { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoutingPath from \"../../routes/RoutingPath\";\nimport { UserContext } from \"../../shared/provider/UserProvider\";\nimport { i_loginCredentials } from '../../shared/interface/Interface'\nimport BackendAPIService from '../../shared/api/service/BackendAPIService'\n\nexport const LogInView = () => {\n  const history = useHistory();\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n  const [allUsersFromServer, setAllUsersFromServer] = useState([])\n  const [logInFormData, setLogInFormData] = useState<i_loginCredentials>({\n    email: \"\",\n    password: \"\"\n  })\n\n  const fetchDataFromServer = async () => {\n    const response = await BackendAPIService.getAllUsers()\n    const emails = response.data.map((item: any) => item.email)\n    console.log('emails', emails)\n    setAllUsersFromServer(response.data)\n  }\n\n  useEffect(() => {\n    fetchDataFromServer()\n  }, [])\n\n\n  const signIn = () => {\n    const isUserVerified = allUsersFromServer.find((user: any) => {\n      if (user.email === logInFormData.email && user.password === logInFormData.password) {\n\n        setAuthUserContext({\n          email: user.email,\n          firstname: user.firstname,\n          lastname: user.lastname,\n          password: user.password\n        })\n        return true\n      }\n      return false\n    })\n    if (isUserVerified) {\n      history.push(RoutingPath.homeView); /* vi flyttas tillbaka till home-view */\n    } else {\n      alert('Antingen är din epost eller ditt lösenord fel, testa igen!')\n    }\n  }\n\n\n\n  return (\n    <div className=\"content\">\n      <h1 className={styles.header}>Logga in här om du vill.</h1>\n      <form>\n        <label className={styles.label}> E-mail:\n          <br />\n          <input className={styles.input}\n            onChange={(event) =>\n              setLogInFormData({\n                ...logInFormData,\n                email: event.target.value\n              })\n            }\n          />\n        </label>\n        <br />\n        <label className={styles.label}> Lösenord:\n          <br />\n          <input className={styles.input}\n            onChange={(event) =>\n              setLogInFormData({\n                ...logInFormData,\n                password: event.target.value,\n              })\n            }\n          />\n        </label>\n        <br />\n        <button className={styles.button} onClick={signIn}>Logga in</button>\n      </form>\n      <div className={styles.signupContainer}>\n        <label className={styles.label}>Jag har inget konto men skulle gärna vilja </label>\n        <button className={styles.button} onClick={() => history.push(RoutingPath.signUpView)}>skapa ett konto</button>\n      </div>\n    </div >\n  );\n};\n\n  //Gör egen funktion för att spara logincredentials istället för useState\n/*   const formInput = { username: '', password: '' }\n  const storeFormInputData = (typetype: string, input: string) => {\n   return ({ ...formInput, [typetype]: input })\n  } */","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/myprofileview/MyProfileView.tsx",["154","155"],"/home/novvea/GitHub/aterwinwin/client/src/components/profile/Profile.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/search/Search.tsx",[],["156","157"],"/home/novvea/GitHub/aterwinwin/client/src/components/backdrop/BackDrop.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/profile/profiledropdown/ProfileDropDown.tsx",["158"],"import \"./ProfileDropDown.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\nimport { Link } from 'react-router-dom'\nimport RoutingPath from '../../../routes/RoutingPath'\n\nexport const ProfileDropDown = () => {\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const logOut = () => {\n    setAuthUserContext(false);\n  }\n\n  return (\n    <div className=\"profileDropDown\">\n      <Link to={RoutingPath.myProfileView}>Min profil</Link>\n      <Link to={RoutingPath.addItemView}>Lägg upp vara</Link>\n      <button>Skapa önskelista</button>\n      <Link to={RoutingPath.settingsView}>Inställningar</Link>\n      <Link to={RoutingPath.homeView} onClick={() => logOut()}>Logga ut</Link>\n    </div>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/BackendAPIService.ts",["159"],"import http from '../BackendAPI'\nimport { i_createNewUser, i_addItem } from '../../interface/Interface'\n\nconst createUser = (data: i_createNewUser) => {\n  return http.post('/user', data)\n}\n\nconst getAllUsers = () => {\n  return http.get('/user')\n}\n\nconst addItem = (data: i_addItem) => {\n  console.log('data:', data)\n  return http.post('/item', data)\n}\n\nconst getAllItems = () => {\n  return http.get('/item')\n}\n\nconst userLikedItem = (likedItem: any) => {\n  return http.patch('/item/liked', likedItem)\n}\n\nconst userDislikedItem = (likedItem: any) => {\n  return http.patch('/item/liked', likedItem)\n}\n\nconst getMyItemsFromServer = (email: string) => {\n  return http.get('/items/myuploads', { params: { email } })\n}\n\nexport default {\n  createUser,\n  getAllUsers,\n  addItem,\n  getAllItems,\n  userLikedItem,\n  userDislikedItem,\n  getMyItemsFromServer\n}","/home/novvea/GitHub/aterwinwin/client/src/shared/api/BackendAPI.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/view/additem/AddItemView.tsx",["160"],"import styles from './AddItemView.module.css'\nimport { useState, useContext } from 'react'\nimport BackendAPIService from '../../shared/api/service/BackendAPIService'\nimport CloudinaryAPIService from '../../shared/api/service/CloudinaryAPIService'\nimport { UserContext } from '../../shared/provider/UserProvider'\n\n\nexport const AddItemView = () => {\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n  const [addItemFormData, setAddItemFormData] = useState({\n    name: '',\n    category: '',\n    url: '',\n    owner: '',\n    interestedUsers: [],\n    uninterestedUsers: []\n  })\n\n  console.log('authUserContext: ', authUserContext)\n\n\n  const handleChangeImageFile = async (event: any) => {\n    if (event.target.files) {\n      try {\n        const response = await CloudinaryAPIService.uploadOrUpdateImage(event.target.files)\n        setAddItemFormData({ ...addItemFormData, url: response.data.url })\n        console.log('response.data :', response.data)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n\n  const addNewItem = async () => {\n    setAddItemFormData({ ...addItemFormData, owner: authUserContext.email })\n    if (addItemFormData.owner === authUserContext.email && addItemFormData.owner) {\n      console.log('We should have an owner: ', addItemFormData.owner)\n      try {\n        await BackendAPIService.addItem(addItemFormData)\n        console.log('Item was added')\n        console.log('data: ', addItemFormData)\n      } catch (error) {\n        console.log('errormessage: ', error)\n      }\n    } else {\n      console.log('The item could not be added')\n    }\n  }\n\n\n  return (\n    <div className={styles.background}>\n      <div className=\"content\">\n        <h1 className={styles.header}>Lägg till objekt</h1>\n        <div className={styles.photoContainer}>\n          {addItemFormData.url && (<img src={addItemFormData.url} alt={addItemFormData.name} />)}\n        </div>\n        <br />\n        <label className={styles.label}>Ladda upp bild:\n          <br />\n          <input className={styles.button} type=\"file\" onChange={handleChangeImageFile} />\n        </label>\n        <br />\n        <label className={styles.label}> Objekttyp:\n          <br />\n          <input className={styles.input} type=\"text\" required onChange={(event) => setAddItemFormData({ ...addItemFormData, name: event.target.value })} />\n        </label>\n        <br />\n        <label className={styles.label}> Kategori:\n          <br />\n          <input className={styles.input} type=\"text\" required onChange={(event) => setAddItemFormData({ ...addItemFormData, category: event.target.value })} />\n        </label>\n        <br />\n        <button className={styles.button} onClick={() => addNewItem()}>Spara</button>\n\n\n\n      </div>\n    </div>\n  )\n}\n","/home/novvea/GitHub/aterwinwin/client/src/components/additembutton/AddItemButton.tsx",["161"],"import styles from './AddItemButton.module.css'\nimport { useHistory } from 'react-router-dom'\nimport { useContext } from 'react'\nimport RoutingPath from '../../routes/RoutingPath'\nimport { UserContext } from '../../shared/provider/UserProvider'\n\nexport const AddItemButton = () => {\n  const history = useHistory();\n  const [authUserContext, setAuthUserContext] = useContext(UserContext)\n\n  const moveToAddItemViewOrLogIn = () => {\n    authUserContext\n      ?\n      history.push(RoutingPath.addItemView)\n      :\n      history.push(RoutingPath.logInView)\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.button} onClick={() => moveToAddItemViewOrLogIn()}>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M3 4V1H5V4H8V6H5V9H3V6H0V4H3ZM6 10V7H9V4H16L17.83 6H21C22.1 6 23 6.9 23 8V20C23 21.1 22.1 22 21 22H5C3.9 22 3 21.1 3 20V10H6ZM13 19C15.76 19 18 16.76 18 14C18 11.24 15.76 9 13 9C10.24 9 8 11.24 8 14C8 16.76 10.24 19 13 19ZM9.8 14C9.8 15.77 11.23 17.2 13 17.2C14.77 17.2 16.2 15.77 16.2 14C16.2 12.23 14.77 10.8 13 10.8C11.23 10.8 9.8 12.23 9.8 14Z\" fill=\"#49984C\" />\n        </svg>\n        Lägg till objekt</button>\n    </div>\n  )\n}\n","/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/CloudinaryAPIService.ts",["162"],"import http from '../CloudinaryAPI'\n\nconst uploadOrUpdateImage = (file: any) => {\n\n  const formData = new FormData()\n  formData.append('file', file[0])\n  formData.append('upload_preset', 'xjrgcel9')\n\n  return http.post('/image/upload/', formData)\n}\n\nexport default {\n  uploadOrUpdateImage\n}\n","/home/novvea/GitHub/aterwinwin/client/src/shared/api/CloudinaryAPI.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/components/itemcards/ItemCards.tsx",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":15,"column":27,"nodeType":"169","messageId":"170","endLine":15,"endColumn":45},{"ruleId":"167","severity":1,"message":"171","line":1,"column":35,"nodeType":"169","messageId":"170","endLine":1,"endColumn":45},{"ruleId":"167","severity":1,"message":"172","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":28},{"ruleId":"167","severity":1,"message":"171","line":1,"column":35,"nodeType":"169","messageId":"170","endLine":1,"endColumn":45},{"ruleId":"167","severity":1,"message":"173","line":10,"column":9,"nodeType":"169","messageId":"170","endLine":10,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":11,"column":27,"nodeType":"169","messageId":"170","endLine":11,"endColumn":45},{"ruleId":"167","severity":1,"message":"168","line":12,"column":27,"nodeType":"169","messageId":"170","endLine":12,"endColumn":45},{"ruleId":"167","severity":1,"message":"174","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"175","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":19},{"ruleId":"167","severity":1,"message":"176","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":16},{"ruleId":"167","severity":1,"message":"177","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":25},{"ruleId":"167","severity":1,"message":"177","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":9,"column":27,"nodeType":"169","messageId":"170","endLine":9,"endColumn":45},{"ruleId":"178","severity":1,"message":"179","line":26,"column":6,"nodeType":"180","endLine":26,"endColumn":8,"suggestions":"181"},{"ruleId":"163","replacedBy":"182"},{"ruleId":"165","replacedBy":"183"},{"ruleId":"167","severity":1,"message":"177","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":33,"column":1,"nodeType":"186","endLine":41,"endColumn":2},{"ruleId":"167","severity":1,"message":"168","line":9,"column":27,"nodeType":"169","messageId":"170","endLine":9,"endColumn":45},{"ruleId":"167","severity":1,"message":"168","line":9,"column":27,"nodeType":"169","messageId":"170","endLine":9,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":12,"column":1,"nodeType":"186","endLine":14,"endColumn":2},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"@typescript-eslint/no-unused-vars","'setAuthUserContext' is assigned a value but never used.","Identifier","unusedVar","'ReactChild' is defined but never used.","'i_loginCredentials' is defined but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.","'RoutingPath' is defined but never used.","'Search' is defined but never used.","'authUserContext' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authUserContext.email'. Either include it or remove the dependency array.","ArrayExpression",["189"],["187"],["188"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},"Update the dependencies array to be: [authUserContext.email]",{"range":"192","text":"193"},[976,978],"[authUserContext.email]"]