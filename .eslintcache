[{"/home/novvea/GitHub/aterwinwin/client/src/index.tsx":"1","/home/novvea/GitHub/aterwinwin/client/src/reportWebVitals.ts":"2","/home/novvea/GitHub/aterwinwin/client/src/App.tsx":"3","/home/novvea/GitHub/aterwinwin/client/src/routes/Routes.tsx":"4","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/UserProvider.tsx":"5","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/CardProvider.tsx":"6","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/Navigation.tsx":"7","/home/novvea/GitHub/aterwinwin/client/src/routes/RoutingPath.ts":"8","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/desktopnavigation/DesktopNavigation.tsx":"9","/home/novvea/GitHub/aterwinwin/client/src/hooks/useWindowDimensions.tsx":"10","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/MobileNavigation.tsx":"11","/home/novvea/GitHub/aterwinwin/client/src/view/signup/SignUpView.tsx":"12","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/settingsview/SettingsView.tsx":"13","/home/novvea/GitHub/aterwinwin/client/src/view/home/HomeView.tsx":"14","/home/novvea/GitHub/aterwinwin/client/src/view/about/AboutView.tsx":"15","/home/novvea/GitHub/aterwinwin/client/src/view/categories/CategoriesView.tsx":"16","/home/novvea/GitHub/aterwinwin/client/src/view/login/LogInView.tsx":"17","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/myprofileview/MyProfileView.tsx":"18","/home/novvea/GitHub/aterwinwin/client/src/components/profile/Profile.tsx":"19","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx":"20","/home/novvea/GitHub/aterwinwin/client/src/components/search/Search.tsx":"21","/home/novvea/GitHub/aterwinwin/client/src/components/productcards/ProductCards.tsx":"22","/home/novvea/GitHub/aterwinwin/client/src/components/backdrop/BackDrop.tsx":"23","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx":"24","/home/novvea/GitHub/aterwinwin/client/src/components/profile/profiledropdown/ProfileDropDown.tsx":"25","/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/BackendAPIService.ts":"26","/home/novvea/GitHub/aterwinwin/client/src/shared/api/BackendAPI.ts":"27","/home/novvea/GitHub/aterwinwin/client/src/view/additem/AddItemView.tsx":"28","/home/novvea/GitHub/aterwinwin/client/src/components/additembutton/AddItemButton.tsx":"29"},{"size":478,"mtime":1614785500243,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1614785500248,"results":"32","hashOfConfig":"31"},{"size":468,"mtime":1614785500199,"results":"33","hashOfConfig":"31"},{"size":2181,"mtime":1615450787245,"results":"34","hashOfConfig":"31"},{"size":417,"mtime":1614785500271,"results":"35","hashOfConfig":"31"},{"size":518,"mtime":1614785500269,"results":"36","hashOfConfig":"31"},{"size":772,"mtime":1614785500207,"results":"37","hashOfConfig":"31"},{"size":470,"mtime":1615450605065,"results":"38","hashOfConfig":"31"},{"size":1005,"mtime":1614785500211,"results":"39","hashOfConfig":"31"},{"size":551,"mtime":1614785500241,"results":"40","hashOfConfig":"31"},{"size":958,"mtime":1614785500215,"results":"41","hashOfConfig":"31"},{"size":1665,"mtime":1615402016909,"results":"42","hashOfConfig":"31"},{"size":153,"mtime":1614785500283,"results":"43","hashOfConfig":"31"},{"size":1512,"mtime":1615451686895,"results":"44","hashOfConfig":"31"},{"size":150,"mtime":1614785500274,"results":"45","hashOfConfig":"31"},{"size":387,"mtime":1614785500287,"results":"46","hashOfConfig":"31"},{"size":1701,"mtime":1614785500293,"results":"47","hashOfConfig":"31"},{"size":1035,"mtime":1614785500280,"results":"48","hashOfConfig":"31"},{"size":597,"mtime":1614785500232,"results":"49","hashOfConfig":"31"},{"size":699,"mtime":1614785500223,"results":"50","hashOfConfig":"31"},{"size":210,"mtime":1614785500239,"results":"51","hashOfConfig":"31"},{"size":2616,"mtime":1615405369726,"results":"52","hashOfConfig":"31"},{"size":200,"mtime":1614785500204,"results":"53","hashOfConfig":"31"},{"size":403,"mtime":1614785500218,"results":"54","hashOfConfig":"31"},{"size":793,"mtime":1614785500235,"results":"55","hashOfConfig":"31"},{"size":283,"mtime":1615384258669,"results":"56","hashOfConfig":"31"},{"size":236,"mtime":1615298193541,"results":"57","hashOfConfig":"31"},{"size":181,"mtime":1615452399086,"results":"58","hashOfConfig":"31"},{"size":578,"mtime":1615452535525,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1a3dezs",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/novvea/GitHub/aterwinwin/client/src/index.tsx",[],["128","129"],"/home/novvea/GitHub/aterwinwin/client/src/reportWebVitals.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/App.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/routes/Routes.tsx",["130"],"/home/novvea/GitHub/aterwinwin/client/src/shared/provider/UserProvider.tsx",["131"],"import { useState, createContext, ReactChild } from \"react\";\n\nexport const UserContext = createContext<any>(null);\n\nexport const UserProvider = (props: { children: React.ReactChild }) => {\n  const [authUserContext, setAuthUserContext] = useState();\n  const { children } = props;\n\n  return (\n    <UserContext.Provider value={[authUserContext, setAuthUserContext]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/shared/provider/CardProvider.tsx",["132"],"import { useState, createContext, ReactChild } from 'react'\n\nexport const CardContext = createContext<any>(null)\n\nexport const CardProvider = (props: {children: React.ReactChild}) => {\n  const [indexContext, setIndexContext] = useState(0)\n  const [likedPicturesContext, setLikedPicturesContext] = useState([])\n  const { children } = props;\n\n  return (\n    <CardContext.Provider value={{indexContext, setIndexContext, likedPicturesContext, setLikedPicturesContext}} >\n      {children}\n    </CardContext.Provider>\n  )\n}\n","/home/novvea/GitHub/aterwinwin/client/src/components/navigation/Navigation.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/routes/RoutingPath.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/desktopnavigation/DesktopNavigation.tsx",["133","134"],"import \"./DesktopNavigation.css\";\nimport { useHistory, Link } from \"react-router-dom\";\n import { useContext } from \"react\";\nimport RoutingPath from \"../../../routes/RoutingPath\";\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\nimport { Profile } from \"../../profile/Profile\";\n\n\nexport const DesktopNavigation = () => {\n  const history =useHistory()\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUserContext ? \n      <div className=\"profile\" >\n        <Profile />\n      </div>\n     : \n     <div className=\"desktopNavigationTabWrapper\"> \n      <Link to={RoutingPath.signUpView}>\n        Gå med\n      </Link>\n        <span> eller </span>     \n      <Link to={RoutingPath.logInView}>\n        logga in\n      </Link>\n        <span> eller </span>\n      <Link to={RoutingPath.aboutView}>\n        få veta hur det fungerar.\n      </Link>\n    </div>\n    ;\n  };\n\n  return displayNavigationOrUsername()\n};\n","/home/novvea/GitHub/aterwinwin/client/src/hooks/useWindowDimensions.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/MobileNavigation.tsx",["135"],"import \"./MobileNavigation.css\";\nimport { useState, useContext } from 'react'\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\nimport { SideBar } from './sidebar/SideBar'\nimport { BackDrop } from '../../backdrop/BackDrop'\nimport { Profile } from '../../profile/Profile'\nimport { UserContext } from '../../../shared/provider/UserProvider'\n\n\nexport const MobileNavigation = () => {\n  const [openSideBar, setOpenSideBar] = useState<boolean>(false)\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUserContext ? \n      <div className=\"profile\" >\n        <Profile />\n      </div>\n     : \n     <>\n    <HamburgerButton sideBarHandler={setOpenSideBar}/>\n    <SideBar sideBarIsOpen={openSideBar} sideBarHandler={setOpenSideBar}/>\n    {!openSideBar || <BackDrop sideBarHandler={setOpenSideBar}/>}\n    </>\n    }\n\n    return displayNavigationOrUsername()\n    };\n\n\n\n","/home/novvea/GitHub/aterwinwin/client/src/view/signup/SignUpView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/settingsview/SettingsView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/home/HomeView.tsx",["136","137"],"/home/novvea/GitHub/aterwinwin/client/src/view/about/AboutView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/categories/CategoriesView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/view/login/LogInView.tsx",["138"],"import { useState, useContext } from \"react\";\nimport { i_loginCredentials } from \"../../shared/interface/Interface\";\nimport { useHistory } from \"react-router-dom\";\nimport RoutingPath from \"../../routes/RoutingPath\";\nimport { UserContext } from \"../../shared/provider/UserProvider\";\n\nexport const LogInView = () => {\n  const history = useHistory();\n  const [loginCredentials, setLoginCredentials] = useState<i_loginCredentials>({\n    username: \"\",\n    password: \"\",\n   isAuthenticated: false\n  });\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const signIn = () => {\n    setLoginCredentials({ ...loginCredentials, isAuthenticated: true })\n    localStorage.setItem(\n      \"user\",\n      loginCredentials.username\n    ); /* användarnamnet sparas inne i webläsaren */\n    setAuthUserContext(\n      loginCredentials\n    ); /* alla värden i logincredentials sparas i ett globalt värde */\n    history.push(RoutingPath.homeView); /* vi flyttas tillbaka till home-view */\n  };\n\n\n  return (\n    <div>\n      {/* <h1>{loginCredentials.username}</h1> */}\n      <h1>Logga in här om du vill.</h1>\n      <form>\n        <input\n          placeholder=\"username\"\n          onChange={(event) =>\n            setLoginCredentials({\n              ...loginCredentials,\n              username: event.target.value,\n            })\n          }\n        />{\" \"}\n        <br />\n        <input\n          placeholder=\"password\"\n          onChange={(event) =>\n            setLoginCredentials({\n              ...loginCredentials,\n              password: event.target.value,\n            })\n          }\n        />\n        <button onClick={() => signIn()}>Logga in</button>\n      </form>\n    </div>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/view/authenticateduserviews/myprofileview/MyProfileView.tsx",["139"],"import './MyProfileView.css'\nimport {useContext} from 'react'\nimport {CardContext} from '../../../shared/provider/CardProvider'\n\nexport const MyProfileView = () => {\n\n  const {likedPicturesContext, setLikedPicturesContext} = useContext<any>(CardContext)\n  console.log('In mu profileview: likedPicturesContext', likedPicturesContext)\n\n  const displayLikedPicturesIfThereAreAny = () => {\n    return likedPicturesContext.length > 0\n    ?\n    <>\n      <h2>Jag har gillat följande bilder:</h2>\n      <ul className='likedPictures'>\n        {likedPicturesContext.map((pic:string) => <li><img key={pic} src={pic} alt='Product'/></li>)}\n      </ul>\n    </>\n  :\n    <h2>Du har ännu inte gillat några bilder</h2>\n  }\n\n  return(\n    <div>\n      <h1>Detta är min profilsida</h1>\n      {displayLikedPicturesIfThereAreAny()}\n\n      <ul>\n        <li>Lägg till info om användaren</li>\n        <li>Visa upplagda föremål</li>\n        <li>Visa gillade och supergillade föremål</li>\n        <li>Visa önskelistan</li>\n      </ul>\n    </div>\n  )\n}","/home/novvea/GitHub/aterwinwin/client/src/components/profile/Profile.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/search/Search.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/productcards/ProductCards.tsx",["140","141","142"],"import styles from './ProductCards.module.css'\nimport { useState, useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport TinderCard from 'react-tinder-card'\nimport { CardContext } from '../../shared/provider/CardProvider'\n\n\nexport const ProductCards = () => {\n  const [picsumData, setPicsumData] = useState<any>()\n  const { indexContext, setIndexContext } = useContext<any>(CardContext)\n  const { likedPicturesContext, setLikedPicturesContext } = useContext<any>(CardContext)\n\n  const getDataFromPicsumAPI = async () => {\n    try {\n      const serverResponse = await axios.get('https://picsum.photos/v2/list')\n      setPicsumData(serverResponse.data[indexContext].download_url)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getDataFromPicsumAPI()\n  }, [indexContext])\n\n  const addCountOnButtonClick = () => {\n    setIndexContext(indexContext + 1)\n  }\n  console.log('utanför likedPicturesContext:', likedPicturesContext)\n  const likeAndAddCountOnButtonClick = () => {\n    setIndexContext(indexContext + 1)\n    console.log('innanför likedPicturesContext:', likedPicturesContext)\n    setLikedPicturesContext([...likedPicturesContext, picsumData])\n  }\n\n  return (\n    <div className={styles.productCardWrapper}>\n      <TinderCard\n        onSwipe={() => console.log('onSwipe')}\n        onCardLeftScreen={() => console.log('CardLeftScreen')}\n      >\n        <div className={styles.productCard}>\n          <img className={styles.productImage} src={picsumData} alt='A randome produkt taken from the API' />\n          <h2 className={styles.productTitle}>Vattenkanna</h2>\n          <div className={styles.productSubtitle}>5km bort • Kök</div>\n        </div>\n      </TinderCard>\n      <TinderCard\n        onSwipe={() => console.log('onSwipe')}\n        onCardLeftScreen={() => console.log('CardLeftScreen')}\n      >\n        <div className={styles.productCard}>\n          <img className={styles.productImage} src={picsumData} alt='A randome produkt taken from the API' />\n          <h2 className={styles.productTitle}>Vattenkanna</h2>\n          <div className={styles.productSubtitle}>5km bort • Kök</div>\n        </div>\n      </TinderCard>\n      {/*       <h1>Produkt av typen blabla med id {indexContext}</h1>\n      \n      <div className='decisionButtonWrapper'>\n        <button onClick={() => addCountOnButtonClick()}>Nej tack!</button>\n        <button onClick={() => likeAndAddCountOnButtonClick()}>Mer än bara gillar, vill absolut ha!!!!</button>\n        <button onClick={() => likeAndAddCountOnButtonClick()}> Gillar't </button>\n      </div> */}\n    </div>\n  )\n}\n","/home/novvea/GitHub/aterwinwin/client/src/components/backdrop/BackDrop.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/profile/profiledropdown/ProfileDropDown.tsx",["143"],"import \"./ProfileDropDown.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\nimport { Link } from 'react-router-dom'\nimport RoutingPath from '../../../routes/RoutingPath'\n\nexport const ProfileDropDown = () => {\n  const [authUserContext, setAuthUserContext] = useContext(UserContext);\n\n  const logOut = () => {\n    setAuthUserContext(false);\n    localStorage.removeItem('user')\n  }\n\n  return (\n    <div className=\"profileDropDown\">\n      <Link to={RoutingPath.myProfileView}>Min profil</Link>\n      <button>Lägg upp vara</button>\n      <button>Skapa önskelista</button>\n      <Link to={RoutingPath.settingsView}>Inställningar</Link>\n      <Link to={RoutingPath.homeView} onClick={() => logOut()}>Logga ut</Link>\n    </div>\n  );\n};\n","/home/novvea/GitHub/aterwinwin/client/src/shared/api/service/BackendAPIService.ts",["144"],"import http from '../BackendAPI'\nimport { i_createNewUser } from '../../interface/Interface'\n\nconst createUser = (data: i_createNewUser) => {\n  return http.post('/user', data)\n}\n\nconst getAllUsers = () => {\n  return http.get('/user')\n}\n\nexport default {\n  createUser,\n  getAllUsers\n}","/home/novvea/GitHub/aterwinwin/client/src/shared/api/BackendAPI.ts",[],"/home/novvea/GitHub/aterwinwin/client/src/view/additem/AddItemView.tsx",[],"/home/novvea/GitHub/aterwinwin/client/src/components/additembutton/AddItemButton.tsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":27,"column":6,"nodeType":"151","endLine":27,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":35,"nodeType":"155","messageId":"156","endLine":1,"endColumn":45},{"ruleId":"153","severity":1,"message":"154","line":1,"column":35,"nodeType":"155","messageId":"156","endLine":1,"endColumn":45},{"ruleId":"153","severity":1,"message":"157","line":10,"column":9,"nodeType":"155","messageId":"156","endLine":10,"endColumn":16},{"ruleId":"153","severity":1,"message":"158","line":11,"column":27,"nodeType":"155","messageId":"156","endLine":11,"endColumn":45},{"ruleId":"153","severity":1,"message":"158","line":12,"column":27,"nodeType":"155","messageId":"156","endLine":12,"endColumn":45},{"ruleId":"153","severity":1,"message":"159","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":16},{"ruleId":"153","severity":1,"message":"160","line":11,"column":10,"nodeType":"155","messageId":"156","endLine":11,"endColumn":25},{"ruleId":"153","severity":1,"message":"160","line":14,"column":10,"nodeType":"155","messageId":"156","endLine":14,"endColumn":25},{"ruleId":"153","severity":1,"message":"161","line":7,"column":32,"nodeType":"155","messageId":"156","endLine":7,"endColumn":55},{"ruleId":"149","severity":1,"message":"162","line":24,"column":6,"nodeType":"151","endLine":24,"endColumn":20,"suggestions":"163"},{"ruleId":"153","severity":1,"message":"164","line":26,"column":9,"nodeType":"155","messageId":"156","endLine":26,"endColumn":30},{"ruleId":"153","severity":1,"message":"165","line":30,"column":9,"nodeType":"155","messageId":"156","endLine":30,"endColumn":37},{"ruleId":"153","severity":1,"message":"160","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":12,"column":1,"nodeType":"168","endLine":15,"endColumn":2},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthUserContext'. Either include it or remove the dependency array.","ArrayExpression",["171"],"@typescript-eslint/no-unused-vars","'ReactChild' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'setAuthUserContext' is assigned a value but never used.","'Search' is defined but never used.","'authUserContext' is assigned a value but never used.","'setLikedPicturesContext' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDataFromPicsumAPI'. Either include it or remove the dependency array.",["172"],"'addCountOnButtonClick' is assigned a value but never used.","'likeAndAddCountOnButtonClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [setAuthUserContext]",{"range":"177","text":"178"},"Update the dependencies array to be: [getDataFromPicsumAPI, indexContext]",{"range":"179","text":"180"},[1222,1224],"[setAuthUserContext]",[803,817],"[getDataFromPicsumAPI, indexContext]"]